Eclipse (IDE)
JUnit
Mockito (stub generation)
Gradle / Maven / Ant

http://softwaretestingstandard.org/
ISO/IEC/IEEE/29119 : 국제표준


Project Quality Management
* Quality Planning
* Quality Assurance (QA)
** Audit (감사)
** Process Analysis
** Process Evaluation
* Quality Control (QC)
** inspection, test
** Product Analysis


Term
* Mistake (Error) : 실수
* Fault : occured by Mistake (사람 때문에 발생)
** omission : not implemented (명세에 있는데 구현 안된 것)
** commision : not required (명세에 없는데 구현된 것)
** not meeted (logic은 있는데 잘못 구현된 것)
* Faliure : occured by Fault. 결과가 기대한 것 과 다름 (오작동). 외부에서 관측이 가능해야 함.
** Fault가 있다고 항상 발생하는 건 아님.

* RIP model
** Reachability condition : The fault must be operated
** Infection condition : After the fault is perated, Error state must be occured
** Propagation condition : 


Exercise Target)
* Specification-Based Testing (Black-box)
** 누락된 기능 탐지할 때
* Structure-Based Testing (White-box)
** 의도되지 않은 기능 탐지할 때
* Experience-Based Testing 
** 오류 추정 기법, 오류가 발생할 것 같은 케이스 작성
Keyword-Driven Testing


Test Level
* 단위 테스트 (Unit Test)
** Driver and Stub must be generated automately. (ex. Mockito)
* 통합 테스트 (Integration Test)
** The connected components are tested.
* 시스템 테스트 (System Test)
** Done after integration test is completed.
* 인수 테스트 (Acceptance Test)
** User do this test.
** Alpha test (in developer environment)
** Beta test (in user environment)

* Testing Pyramid
** UI Test : end-to-end test (ex. keyword-driven test)
*** end-to-end test : test in user aspect
** Integration Test
** Unit Test


